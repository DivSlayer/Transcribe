name: Build Executables

on:
  push:
    tags:
      - 'v*'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Create directories
      run: |
        mkdir templates static uploads chunks
    
    - name: Build Windows executable
      run: |
        pyinstaller --onefile --clean --noconfirm --add-data "templates;templates" --add-data "static;static" --add-data "uploads;uploads" --add-data "chunks;chunks" --hidden-import channels --hidden-import daphne --hidden-import django --hidden-import SpeechRecognition --hidden-import pydub --hidden-import ffmpeg --hidden-import ffmpeg-python --hidden-import aifc --hidden-import wave --hidden-import audioop --hidden-import array --hidden-import struct gui.py
    
    - name: List dist directory
      run: |
        dir dist
    
    - name: Upload Windows executable
      uses: actions/upload-artifact@v3
      with:
        name: Transcribe-Windows
        path: dist/Transcribe.exe
        if-no-files-found: error

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Create directories
      run: |
        mkdir -p templates static uploads chunks
    
    - name: Build Linux executable
      run: |
        pyinstaller --onefile --clean --noconfirm --add-data "templates:templates" --add-data "static:static" --add-data "uploads:uploads" --add-data "chunks:chunks" --hidden-import channels --hidden-import daphne --hidden-import django --hidden-import SpeechRecognition --hidden-import pydub --hidden-import ffmpeg --hidden-import ffmpeg-python --hidden-import aifc --hidden-import wave --hidden-import audioop --hidden-import array --hidden-import struct gui.py
    
    - name: List dist directory
      run: |
        ls -la dist/
    
    - name: Make executable
      run: chmod +x dist/transcribe
    
    - name: Upload Linux executable
      uses: actions/upload-artifact@v3
      with:
        name: Transcribe-Linux
        path: dist/transcribe
        if-no-files-found: error

  create-release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    steps:
    - name: Create release directory
      run: mkdir -p release
    
    - name: Download Windows executable
      uses: actions/download-artifact@v3
      with:
        name: Transcribe-Windows
        path: release
        if-no-files-found: error
    
    - name: Download Linux executable
      uses: actions/download-artifact@v3
      with:
        name: Transcribe-Linux
        path: release
        if-no-files-found: error
    
    - name: List release directory
      run: ls -la release/
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/Transcribe.exe
          release/transcribe
        name: Release ${{ github.ref_name }}
        tag_name: ${{ github.ref_name }}
        body: |
          # Transcribe v${{ github.ref_name }}
          
          ## Features
          - Audio transcription with real-time processing
          - Support for multiple audio formats
          - User-friendly GUI interface
          - Cross-platform support (Windows and Linux)
          
          ## Downloads
          - Windows: Transcribe.exe
          - Linux: transcribe (executable)
          
          ## System Requirements
          - Windows 10/11 or Linux (Kali Linux tested)
          - FFmpeg installed (included in the package)
          - 4GB RAM minimum recommended
          - 500MB free disk space
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 